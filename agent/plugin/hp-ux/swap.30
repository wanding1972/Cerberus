#!/usr/bin/perl
use strict;
use File::Spec;
my $path_curf = File::Spec->rel2abs(__FILE__);
my ($vol, $path, $file) = File::Spec->splitpath($path_curf);
require "$path/../../conf/global.conf";
require "$path/../../lib/funcs.pl";
require "$path/../../lib/command.pl";
$ENV{'LC_ALL'} = 'C';

my $app = "swap";
dupProcess($file);
my @res = swapplugin();
if(scalar @res >0){
	`echo $$ > $path/../../../run/tmp/$app.pid`;
}

sub swapplugin{
	my @outs = swapparse(mycmds('swap'));
        my $file = "$path/../../../run/data/perf/$app.".curtime().".dat";
	my $dstDir = "$path/../../../run/queue/current/";
        writeArray($file,\@outs);
	`cp  $file $dstDir`;
	return @outs;
}

sub swapparse{
        my (@lines) = @_;
        my @perf = ();
        my $swapRatio = 0;
        foreach my $line (@lines){
                chomp($line);
                if($line =~ /memory/){
                        $line=~s/^\s*|\s*$//g;
                        my @tokens = split / +/,$line;
                        $swapRatio = int($tokens[2]/$tokens[1]*100);
                }
        }
        push(@perf,[$app,'swap_ratio','-',$swapRatio]);
        return @perf;
}

1;
